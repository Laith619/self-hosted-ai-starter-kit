services:
  - type: web
    name: n8n
    env: docker
    region: oregon
    plan: starter
    runtime: docker
    dockerfilePath: Dockerfile.n8n
    healthCheckPath: /
    envVars:
      # Database configuration
      - key: DB_TYPE
        value: postgresdb
      - key: DB_POSTGRESDB_HOST
        fromDatabase:
          name: n8n-db
          property: host
      - key: DB_POSTGRESDB_USER
        fromDatabase:
          name: n8n-db
          property: user
      - key: DB_POSTGRESDB_PASSWORD
        fromDatabase:
          name: n8n-db
          property: password
      - key: DB_POSTGRESDB_DATABASE
        fromDatabase:
          name: n8n-db
          property: database
      # Security settings
      - key: N8N_ENCRYPTION_KEY
        sync: false
      - key: N8N_USER_MANAGEMENT_JWT_SECRET
        sync: false
      # Basic settings
      - key: N8N_HOST
        value: n8n-fj3k.onrender.com
      - key: N8N_PROTOCOL
        value: https
      - key: N8N_PORT
        value: "5678"
      - key: WEBHOOK_URL
        value: https://n8n-fj3k.onrender.com
    disk:
      name: n8n-data
      mountPath: /home/node/.n8n
      sizeGB: 10

  - type: web
    name: qdrant
    env: docker
    region: oregon
    plan: starter
    runtime: docker
    dockerfilePath: Dockerfile.qdrant
    disk:
      name: qdrant-data
      mountPath: /qdrant/storage
      sizeGB: 10

databases:
  - name: n8n-db
    databaseName: n8n_production
    user: n8n_user
    ipAllowList: 
      - source: 0.0.0.0/0
        description: everywhere
    region: oregon
    plan: basic-1gb
    postgresMajorVersion: "16"
    diskSizeGB: 15
